# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DM9dPdIIKzW70R_3_T7qVtQ-6rBLcN_g
"""

import os
import cv2
import numpy
import math
import argparse
from skimage.metrics import structural_similarity as compare_ssim
from tqdm import tqdm

# 스크립트 실행 시 인자를 받기 위한 설정
ap = argparse.ArgumentParser()
ap.add_argument("-o", "--original_dir", required=True, type=str, help="/content/drive/MyDrive/STOB/original")
ap.add_argument("-s", "--contrast_dir", required=True, type=str, help="/content/drive/MyDrive/STOB/contrast")
args = ap.parse_args()

def psnr(img1, img2):
    """
    두 이미지 간의 PSNR 값을 계산합니다.
    """
    mse = numpy.mean((img1 - img2) ** 2)
    if mse == 0:
        return 100.0  # 두 이미지가 완전히 동일할 경우
    PIXEL_MAX = 255.0
    return 20 * math.log10(PIXEL_MAX / math.sqrt(mse))

def main():
    # 각 디렉토리에서 지원하는 확장자(png, jpg, jpeg)를 가진 파일 목록을 가져옵니다.
    supported_formats = ('.png', '.jpg', '.jpeg')
    try:
        original_files = sorted([f for f in os.listdir(args.original_dir) if f.lower().endswith(supported_formats)])
        contrast_files = sorted([f for f in os.listdir(args.contrast_dir) if f.lower().endswith(supported_formats)])
    except FileNotFoundError:
        print("오류: 지정된 디렉토리를 찾을 수 없습니다. 경로를 확인해주세요.")
        return

    # 두 디렉토리의 이미지 개수가 동일한지 확인합니다.
    if len(original_files) != len(contrast_files):
        print("오류: 원본과 비교 디렉토리의 이미지 파일 개수가 다릅니다.")
        print(f"원본 디렉토리 파일 수: {len(original_files)}, 비교 디렉토리 파일 수: {len(contrast_files)}")
        return

    if not original_files:
        print("오류: 디렉토리에 비교할 이미지가 없습니다.")
        return

    total_psnr = 0.0
    total_ssim = 0.0
    file_count = len(original_files)

    print(f"총 {file_count}개의 이미지 쌍에 대한 비교를 시작합니다.")

    # tqdm을 사용하여 진행 상황을 시각적으로 표시합니다.
    for i in tqdm(range(file_count), desc="Evaluating Images"):
        # 각 이미지의 전체 경로를 생성합니다.
        original_path = os.path.join(args.original_dir, original_files[i])
        contrast_path = os.path.join(args.contrast_dir, contrast_files[i])

        # 이미지를 읽어옵니다.
        original = cv2.imread(original_path)
        contrast = cv2.imread(contrast_path)

        if original is None or contrast is None:
            print(f"\n경고: '{original_files[i]}' 또는 '{contrast_files[i]}' 파일을 읽을 수 없습니다. 건너뜁니다.")
            continue

        # 비교를 위해 이미지 크기를 원본 기준으로 통일합니다.
        o_height, o_width, _ = original.shape

        # PSNR 계산
        psnr_value = psnr(original, contrast)
        total_psnr += psnr_value

        # SSIM 계산 (흑백 변환 후)
        o_gray = cv2.cvtColor(original, cv2.COLOR_BGR2GRAY)
        c_gray = cv2.cvtColor(contrast, cv2.COLOR_BGR2GRAY)
        ssim_score, _ = compare_ssim(o_gray, c_gray, full=True)
        total_ssim += ssim_score

    # 최종 평균값 계산 및 출력
    avg_psnr = total_psnr / file_count
    avg_ssim = total_ssim / file_count

    print("\n" + "="*30)
    print("최종 결과")
    print(f"평균 PSNR: {avg_psnr:.4f}")
    print(f"평균 SSIM: {avg_ssim:.4f}")
    print("="*30)


if __name__ == '__main__':
    main()
